# coding: utf-8
require 'naive_bayes_engine'

algorithm_type = NaiveBayesEngine::NAIVE_BAYES
#algorithm_type = NaiveBayesEngine::COMPLEMENTAL_NAIVE_BAYES

engine = NaiveBayesEngine.new(type: algorithm_type)

engine.train(%w(Chinese Beijing Chinese), 'yes')
engine.train(%w(Chinese Chinese Shanghai), 'yes')
engine.train(%w(Chinese Macao), 'yes')
engine.train(%w(Tokyo Japan Chinese), 'no')

#puts "P(Chinese|yes) = #{engine.prob_word_given_category('Chinese', 'yes')}"
#puts "P(Tokyo|yes) = #{engine.prob_word_given_category('Tokyo', 'yes')}"
#puts "P(Japan|yes) = #{engine.prob_word_given_category('Japan', 'yes')}"
#puts "P(Chinise|no) = #{engine.prob_word_given_category('Chinese', 'no')}"
#puts "P(Tokyo|no) = #{engine.prob_word_given_category('Tokyo', 'no')}"
#puts "P(Japan|no) = #{engine.prob_word_given_category('Japan', 'no')}"

test = %w(Chinese Chinese Chinese Tokyo Japan)
puts "log P(yes|test) = #{engine.score(test, 'yes')}"
puts "log P(no|test) = #{engine.score(test, 'no')}"
puts engine.classify(test)
puts engine.score_all(test)


puts 

engine = NaiveBayesEngine.new(type: algorithm_type)
engine.train(%w(bad word), 'spam')
engine.train(%w(good word), 'ham')
input = %w(this is a bad sentence.)
puts engine.score_all(input)
puts engine.classify(input)


